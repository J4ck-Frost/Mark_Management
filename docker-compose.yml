services:
  mongo-exam:
    image: mongo:6.0
    ports: ["27018:27017"]
    volumes: [exam-data:/data/db]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"  # Rotate after 10MB
        max-file: "3"    # Keep 3 log files max
    restart: unless-stopped
    healthcheck:  # Add health checks
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  mongo-candidate:
    image: mongo:6.0
    ports: ["27019:27017"]
    volumes: [candidate-data:/data/db]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]

  mongo-mark:
    image: mongo:6.0
    ports: ["27020:27017"]
    volumes: [mark-data:/data/db]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]


  kafka:
    image: apache/kafka:3.7.0
    container_name: kafka
    ports:
      - "9092:9092"   # For internal Docker communication
      - "29092:29092" # For host (Spring Boot) to connect
    environment:
      KAFKA_KRAFT_CLUSTER_ID: "cluster-1"
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "controller,broker"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      # ðŸ‘‡ Expose both internal and external listeners
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT

      # ðŸ‘‡ This must match the listener name used in CONTROLLER above
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
    volumes:
      - kafka-data:/tmp/kraft-combined-logs
    restart: unless-stopped


volumes:
  exam-data:
  candidate-data:
  mark-data:
  kafka-data: